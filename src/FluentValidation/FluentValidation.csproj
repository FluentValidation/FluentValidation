<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFrameworks>netstandard1.1;netstandard1.6;netstandard2.0;net45</TargetFrameworks>
    <Authors>Jeremy Skinner</Authors>
    <Company />
    <Description>A validation library for .NET that uses a fluent interface to construct strongly-typed validation rules.</Description>
    <Copyright>Copyright (c) Jeremy Skinner 2008-2019</Copyright>
    <PackageProjectUrl>https://fluentvalidation.net</PackageProjectUrl>
    <RepositoryUrl>https://github.com/JeremySkinner/fluentvalidation</RepositoryUrl>
    <PackageIconUrl>https://fluentvalidation.net/assets/images/logo/fluent-validation-icon.png</PackageIconUrl>
    <PackageReleaseNotes>
FluentValidation 8 is a major release. Please read the upgrade notes at https://fluentvalidation.net/upgrading-to-8

Changes in 8.3.0:
* Fix issue in ASP.NET Core integration with GetServiceProvider not working correctly when invoked against a CustomContext/MessageBuilderContext.
* Improved how LanguageStringSource works with error-code overrides.
* Fix thread-safety issue with use of PropertyValidatorOptions.Empty (now removed).
* Improved how calls to When/Unless are handled internally. 
* DelegatingValidator is now marked as deprecated.
* ShouldHaveChildValidator is now marked as deprecated.
* Improvements to Croatian language translations.
* Improvements to Georgian language translations.
* Resolved subtle bug where top-level WhenAsync wouldn't work correctly when wrapping a top-level call to When.

Changes in 8.2.3:
* Fix issue in WebApi integration where DataAnnotations validators could generate duplicate messages when in the same project as FluentValidation.

Changes in 8.2.2:
* Fix FluentValidation.DependencyInjection package name.

Changes in 8.2.1:
* Resolved issue using InjectValidator with RuleForEach.
* Add support for a default IValidatorInterceptor to be registered with the ASP.NET Core Service Provider.

Changes in 8.2.0:
* Add extensions for injecting child validators using the ASP.NET Core Service Provider.
* Implement RuleFor(...).ForEach(...) as an alternative to RuleForEach.
* WithLocalizedMessage is deprecated. Use the overload of WithMessage that takes a Func instead.

Changes in 8.1.3:
* Resolved issue where clientside validation was incorrectly generating metadata for rules with shared conditions.
* ScalePrecisionValidator now has a public method in the fluent interface.
* Fix placeholder names in ScalePrecisionValidator for consistency.
* Updates to Portuguese (Brazil) translations.

Changes in 8.1.2:
* Fix issue where shared When/Unless conditions didn't execute correctly when used with RuleForEach.
        
Changes in 8.1.1:
* Added RuleSetsExecuted property on ValidationResult.
* Resolved issue introduced in 8.1 where the shared condition cache does not work correctly with RuleForEach (#970).

Changes in 8.1:
* Add format support in message placeholders.
* Added support for overriding indexers for collection rules.
* Allow error codes to be used to override localization key in the Language Manager.
* Additional error details are now shown in the ShouldNotHaveValidationErrorFor test extension.
* Conditions defined with root-level When/WhenAsync/Unless/UnlessAsync are now only executed once (instead of once for each rule).
* Support Otherwise method chained from root-level When/WhenAsync/Unless/UnlessAsync.
* Minor wording changes to default English error messages.
* Japanese translation of the default error messages.
* Added Skip property to MVC5's CustomizeValidatorAttribute for parity with AspNetCore and WebApi.
* Remove type constraint on the OverridePropertyName overload that takes an expression.

Added Skip property to MVC5's CustomizeValidatorAttribute to bring parity with AspNetCore and WebApi integration.
Changes in 8.0:
* Support validating only specific properties by path.
* Added OnFailure method
* Deprecated RuleFor(..).SetCollectionValidator in favour of RuleForEach(...).SetValidator
* IStringSource.GetString now takes a validation context instead of a model instance.
* Introduce PropertyValidatorOptions in order to clean up the IPropretyValidator interface.
* Moved the legacy ValidatorAttribute and AttributedValidatorFactory into a separate FluentValidation.Attributes package.
* Remove the pre-7.0 localization mechanism 
* Remove the pre-7.0 methods for custom validation
* Removed many other deprecated methods

Full release notes can be found at https://github.com/JeremySkinner/FluentValidation/blob/master/Changelog.txt
		</PackageReleaseNotes>
    <PackageLicenseExpression>Apache-2.0</PackageLicenseExpression>
    <NeutralLanguage>en</NeutralLanguage>
    <GenerateAssemblyVersionAttribute>false</GenerateAssemblyVersionAttribute>
    <!-- Signing is only performed as part of the release build -->
    <SignAssembly Condition="'$(AssemblyOriginatorKeyFile)'!=''">True</SignAssembly>
    <DelaySign>False</DelaySign>
    <DocumentationFile Condition="'$(Configuration)'=='Release'">bin\$(Configuration)\$(TargetFramework)\FluentValidation.xml</DocumentationFile>
    <DebugType>embedded</DebugType>
    <LangVersion>7.3</LangVersion>
  </PropertyGroup>
  <PropertyGroup>
    <NoWarn>1701;1702;1705;1591</NoWarn>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include="..\CommonAssemblyInfo.cs" Link="CommonAssemblyInfo.cs" />
  </ItemGroup>
  <ItemGroup Condition="'$(TargetFramework)'=='netstandard1.6' or '$(TargetFramework)'=='netstandard1.1'">
    <PackageReference Include="System.ComponentModel.Primitives" Version="4.3.0" />
    <PackageReference Include="System.Collections.Concurrent" Version="4.3.0" />
    <PackageReference Include="System.ValueTuple" Version="4.5.0" />
  </ItemGroup>
  <ItemGroup Condition="'$(TargetFramework)'!='netstandard1.1'">
    <PackageReference Include="System.ComponentModel.Annotations" Version="4.4.1" />
  </ItemGroup>
  <Import Project="..\netfx.props" />
</Project>
